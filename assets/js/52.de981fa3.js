(window.webpackJsonp=window.webpackJsonp||[]).push([[52],{398:function(a,e,s){"use strict";s.r(e);var t=s(42),r=Object(t.a)({},(function(){var a=this,e=a.$createElement,s=a._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h2",{attrs:{id:"添加记录"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#添加记录"}},[a._v("#")]),a._v(" 添加记录")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("INSERT [INTO] tbl_name[(col_name, ...)] {VALUE|VALUES}(VALUES ...);\n")])])]),s("h3",{attrs:{id:"不指定字段名称"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#不指定字段名称"}},[a._v("#")]),a._v(" 不指定字段名称")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("INSERT tbl_name VALUE(value...);\nINSERT user VALUE(1, 'king', 24, 'king@qq.com');\nINSERT user VALUES(NULL, 'queue', 24, 'queue@qq.com');\nINSERT user VALUES(DEFAULT, 'lily', 24, 'lily@qq.com');\n")])])]),s("h3",{attrs:{id:"指定字段名称"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#指定字段名称"}},[a._v("#")]),a._v(" 指定字段名称")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("INSERT tbl_name(字段名称,...) VALUES(值,...);\nINSERT user(username,email) VALUES('rose', 'rose@qq.com');\n")])])]),s("h3",{attrs:{id:"insert-set"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#insert-set"}},[a._v("#")]),a._v(" INSERT ... SET")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("INSERT tbl_name SET 字段名称=值,...;\n")])])]),s("h3",{attrs:{id:"insert-select"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#insert-select"}},[a._v("#")]),a._v(" INSERT ... SELECT")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("INSERT tbl_name[(字段名称,...)] SELECT 字段名称,... FROM tbl_name [WHERE 条件];\n")])])]),s("h3",{attrs:{id:"一次添加多条记录"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一次添加多条记录"}},[a._v("#")]),a._v(" 一次添加多条记录")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("INSERT tbl_name[(字段名称,...)] VALUES(值,...),(值,...),(值,...);\n")])])]),s("h2",{attrs:{id:"修改记录"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#修改记录"}},[a._v("#")]),a._v(" 修改记录")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("UPDATE tbl_name SET 字段名称=值,字段名称=值 [WHERE 条件];\nUPDATE user SET age=29 WHERE id=1;\nUPDATE user SET age=age-20,email=DEFAULT WHERE id<=5;\n")])])]),s("blockquote",[s("p",[a._v("如果不添加条件，整个表中的记录都会被更新")])]),a._v(" "),s("h2",{attrs:{id:"删除记录"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#删除记录"}},[a._v("#")]),a._v(" 删除记录")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("DELETE FROM tbl_name [WHERE 条件];\nDELETE FROM user WHERE username='king';\nDELETE FROM user WHERE age=24;\nDELETE FROM user;\n")])])]),s("blockquote",[s("p",[a._v("如果不添加条件，表中所有记录都会被删除"),s("br"),a._v("\nDELETE清空数据表的时候不会重置AUTO_INCREMENT的值，可以通过ALTER语句将其重置为1")])]),a._v(" "),s("h2",{attrs:{id:"彻底清空数据表"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#彻底清空数据表"}},[a._v("#")]),a._v(" 彻底清空数据表")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("TRUNCATE [TABLE] tbl_name\n")])])]),s("blockquote",[s("p",[a._v("清除表中所有记录并重置AUTO_INCREMENT的值")])]),a._v(" "),s("h2",{attrs:{id:"查询记录"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#查询记录"}},[a._v("#")]),a._v(" 查询记录")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("SELECT select_expr,... FROM tbl_name\n[WHERE 条件] \n[GROUP BY {col_name|position} HAVING 二次筛选]\n[ORDER BY {col_name|position|expr} [ASC|DESC]]\n[LIMIT 限制结果集的显示条数]\n")])])]),s("h3",{attrs:{id:"查询表中所有记录"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#查询表中所有记录"}},[a._v("#")]),a._v(" 查询表中所有记录")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("SELECT * FROM tbl_name;\n-- *表示所有字段\nSELECT * FROM user1;\n")])])]),s("h3",{attrs:{id:"查询指定字段"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#查询指定字段"}},[a._v("#")]),a._v(" 查询指定字段")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("SELECT 字段名称,... FROM tbl_name;\nSELECT username,addr,age FROM user1;\n")])])]),s("h3",{attrs:{id:"不打开数据库查询"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#不打开数据库查询"}},[a._v("#")]),a._v(" 不打开数据库查询")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("SELECT 字段名称,... FROM db_name.tbl_name;\n")])])]),s("h3",{attrs:{id:"给字段起别名"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#给字段起别名"}},[a._v("#")]),a._v(" 给字段起别名")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("SELECT 字段名称 [AS] 别名名称, ... FROM tbl_name;\n\nSELECT id AS '编号',username AS '用户名',sex AS '性别' FROM  user1;\n")])])]),s("h3",{attrs:{id:"给数据表起别名"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#给数据表起别名"}},[a._v("#")]),a._v(" 给数据表起别名")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("SELECT 字段名称,... FROM tbl_name [AS] 别名；\n\nSELECT id,username FROM user1 AS u;\n")])])]),s("h3",{attrs:{id:"表名-字段名的形式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#表名-字段名的形式"}},[a._v("#")]),a._v(" 表名.字段名的形式")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("SELECT tbl_name.col_name,... FROM tbl_name;\n\nSELECT user1.id, user1.username FROM user1;\n")])])]),s("h3",{attrs:{id:"where-条件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#where-条件"}},[a._v("#")]),a._v(" WHERE 条件")]),a._v(" "),s("p",[a._v("筛选出符合条件的记录")]),a._v(" "),s("h4",{attrs:{id:"比较运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#比较运算符"}},[a._v("#")]),a._v(" 比较运算符")]),a._v(" "),s("p",[a._v("> >= < <= = != <> <=>")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("SELECT id,username FROM user1\nWHERE id=5;\n\n-- 检测NULL值\nSELECT id,username,age,userDesc FROM user1 WHERE userDesc<=>NULL;\n")])])]),s("blockquote",[s("p",[a._v("<=> 和 = 的区别：<=>可以检测NULL值")])]),a._v(" "),s("h4",{attrs:{id:"is-not-null"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#is-not-null"}},[a._v("#")]),a._v(" IS [NOT] NULL")]),a._v(" "),s("p",[a._v("检测是否为NULL或者NOT NULL")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("SELECT id,username,age,userDesc FROM user1 WHERE userDesc IS NULL;\n")])])]),s("h4",{attrs:{id:"指定范围"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#指定范围"}},[a._v("#")]),a._v(" 指定范围")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("[NOT] BETWEEN...AND\n\nSELECT id,username,age,sex FROM user1\nWHERE age BETWEEN 18 AND 30;\n")])])]),s("h4",{attrs:{id:"指定集合"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#指定集合"}},[a._v("#")]),a._v(" 指定集合")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("[NOT] IN(值,...)\n\nSELECT id,username,age FROM user1\nWHERE id IN(1,3,5,7,9);\n\nSELECT id,username,age FROM user1\nWHERE username IN('king','queue');\n")])])]),s("h4",{attrs:{id:"逻辑运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#逻辑运算符"}},[a._v("#")]),a._v(" 逻辑运算符")]),a._v(" "),s("ul",[s("li",[s("p",[a._v("AND 逻辑与")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("SELECT id,username,age,sex FROM user1\nWHERE sex='男' AND age>=20;\n\nSELECT id,username,age,sex,salary,addr FROM user1 WHERE salary BETWEEN 60000 AND 100000 AND sex='男' AND addr='北京';\n")])])])]),a._v(" "),s("li",[s("p",[a._v("OR 逻辑或")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("SELECT id,username,age FROM user1\nWHERE id=1 OR username='queue';\n")])])])])]),a._v(" "),s("h4",{attrs:{id:"匹配字符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#匹配字符"}},[a._v("#")]),a._v(" 匹配字符")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("[NOT] LIKE\n\nSELECT id,username,age FROM user1\nWHERE username='king';\n\nSELECT id,username,age FROM user1\nWHERE username LIKE 'king';\n")])])]),s("p",[a._v("通配符")]),a._v(" "),s("ul",[s("li",[a._v("% 任意长度的字符串")]),a._v(" "),s("li",[a._v("_ 任意一个字符")])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("SELECT id,username,age,sex FROM user1\nWHERE username LIKE '%三%';\n\n-- 用户名长度为三位的用户\nSELECT id,username,age,sex FROM user1\nWHERE username LIKE '___';\n\nSELECT id,username,age,sex FROM user1\nWHERE username LIKE '张_%';\n\n-- 默认忽略大小写\nSELECT id,username,age FROM user1\nWHERE username LIKE '%K%';\n")])])]),s("h3",{attrs:{id:"group-by-分组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#group-by-分组"}},[a._v("#")]),a._v(" GROUP BY 分组")]),a._v(" "),s("p",[a._v("把值相同放到一个组中，最终查询出的结果只会显示组中一条记录")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("-- 按照性别分组sex\nSELECT id,username,age,sex FROM user1\nGROUP BY sex;\n")])])]),s("h4",{attrs:{id:"group-concat"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#group-concat"}},[a._v("#")]),a._v(" GROUP_CONCAT()")]),a._v(" "),s("p",[a._v("分组配合GROUP_CONCAT()查看组中某个字段的详细信息")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("-- 按照性别分组，查询组中的用户名有哪些\nSELECT GROUP_CONCAT(username),age,sex,addr FROM user1\nGROUP BY sex;\n")])])]),s("h4",{attrs:{id:"配合聚合函数使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配合聚合函数使用"}},[a._v("#")]),a._v(" 配合聚合函数使用")]),a._v(" "),s("ul",[s("li",[a._v("COUNT():统计记录总数")]),a._v(" "),s("li",[a._v("SUM()：求和")]),a._v(" "),s("li",[a._v("MAX()：求最大值")]),a._v(" "),s("li",[a._v("MIN()：求最小值")]),a._v(" "),s("li",[a._v("AVG()：求平均值")])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("SELECT COUNT(*) AS total_users FROM user1;\nSELECT COUNT(id) FROM user1;\n")])])]),s("blockquote",[s("p",[a._v("如果COUNT（字段名称),字段中的值为NULL，不统计进来,写COUNT(*) 统计NULL值")])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("-- 按照sex分组，得到用户名详情，并且分别统计组中的总人数\nSELECT sex,GROUP_CONCAT(username) AS usersDetail,COUNT(*) AS totalUsers FROM user1 GROUP BY sex;\n\n-- 按照addr分组，得到用户名的详情，总人数，得到组中年龄的综合，年龄的最大值、最小值、平均值\nSELECT addr,GROUP_CONCAT(username) AS usersDetail,\nCOUNT(*) AS totalUsers,\nSUM(age) AS sum_age,\nMAX(age) AS max_age,\nMIN(age) AS min_age,\nAVG(age) AS avg_age\nFROM user1\nGROUP BY addr;\n")])])]),s("h4",{attrs:{id:"配合with-rollup关键词"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配合with-rollup关键词"}},[a._v("#")]),a._v(" 配合WITH ROLLUP关键词")]),a._v(" "),s("p",[a._v("会在记录末尾添加一条记录，是上面所有记录的总和")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("SELECT GROUP_CONCAT(username) AS usersDetail,\nCOUNT(*) AS totalUsers\nFROM user1\nGROUP BY sex\nWITH ROLLUP;\n")])])]),s("h4",{attrs:{id:"按照字段位置分组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#按照字段位置分组"}},[a._v("#")]),a._v(" 按照字段位置分组")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("SELECT addr,GROUP_CONCAT(username) AS usersDetail,\nCOUNT(*) AS totalUsers,\nSUM(age) AS sum_age,\nMAX(age) AS max_age,\nMIN(age) AS min_age,\nAVG(age) AS avg_age\nFROM user1\nGROUP BY 1;\n-- GROUP BY 1表示按照addr分组\n")])])]),s("h4",{attrs:{id:"having子句，对分组结果进行二次筛选"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#having子句，对分组结果进行二次筛选"}},[a._v("#")]),a._v(" HAVING子句，对分组结果进行二次筛选")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("-- 按照addr分组，统计总人数\nSELECT addr,\nGROUP_CONCAT(username) AS usersDetail,\nCOUNT(*) AS totalUsers\nFROM user1\nGROUP BY addr;\n\n-- 对分组结果进行二次筛选，条件是组中总人数>=3\nSELECT addr,\nGROUP_CONCAT(username) AS usersDetail,\nCOUNT(*) AS totalUsers\nFROM user1\nGROUP BY addr\nHAVING COUNT(*)>=3;\n\nSELECT addr,\nGROUP_CONCAT(username) AS usersDetail,\nCOUNT(*) AS totalUsers\nFROM user1\nGROUP BY addr\nHAVING totalUsers>=3;\n")])])]),s("h3",{attrs:{id:"order-by-排序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#order-by-排序"}},[a._v("#")]),a._v(" ORDER BY 排序")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("ORDER BY 字段名称 ASC|DESC\n\nSELECT id,username,age\nFROM user1\nORDER BY id DESC;\n\n-- 默认升序\nSELECT id,username,age\nFROM user1\nORDER BY age;\n\n-- 按照多个字段排序\nSELECT id,username,age\nFROM user1\nORDER BY age ASC, id ASC;\n\n-- 实现随机记录\nSELECT id,username,age\nFROM user1\nORDER BY RAND();\n")])])]),s("h3",{attrs:{id:"limit-限制结果集显示条数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#limit-限制结果集显示条数"}},[a._v("#")]),a._v(" LIMIT 限制结果集显示条数")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("-- 显示结果集的前几条记录\nLIMIT row_count\n-- 从offset开始，显示几条记录\n-- offset从0开始\nLIMIT offset,row_count\n\n-- 显示结果集中前5条记录\nSELECT id,username,age,sex\nFROM user1\nLIMIT 5;\n\nSELECT id,username,age,sex\nFROM user1\nLIMIT 0,5;\n\n-- 显示前3条记录\nSELECT id,username,age,sex\nFROM user1\nLIMIT 0,3;\n\n-- 分页\nSELECT id,username,age,sex\nFROM user1\nLIMIT 0,3;\n\nSELECT id,username,age,sex\nFROM user1\nLIMIT 3,3;\n\nSELECT id,username,age,sex\nFROM user1\nLIMIT 6,3;\n\n-- 更新user1表前三条记录，将age+5\nUPDATE user1 SET age=age+5 LIMIT 3;\n\n-- 删除user1表前三条记录\nDELETE FROM user1 LIMIT 3;\n")])])]),s("h3",{attrs:{id:"完整select语句形式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#完整select语句形式"}},[a._v("#")]),a._v(" 完整select语句形式")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("SELECT addr,\nGROUP_CONCAT(username) AS usersDetail,\nCOUNT(*) AS totalUsers,\nSUM(age) AS sum_age,\nMAX(age) AS max_age,\nMIN(age) AS min_age,\nAVG(age) AS avg_age\nFROM user1\nWHERE id>=2\nGROUP BY addr\nHAVING totalUsers>=2\nORDER BY totalUsers ASC\nLIMIT 0,2;\n")])])]),s("h2",{attrs:{id:"多表查询"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#多表查询"}},[a._v("#")]),a._v(" 多表查询")]),a._v(" "),s("h3",{attrs:{id:"笛卡尔积形式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#笛卡尔积形式"}},[a._v("#")]),a._v(" 笛卡尔积形式")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("SELECT emp.id,emp.username,emp.age,dep.depName FROM emp,dep;\n")])])]),s("h3",{attrs:{id:"内连接形式（用的较多）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#内连接形式（用的较多）"}},[a._v("#")]),a._v(" 内连接形式（用的较多）")]),a._v(" "),s("p",[a._v("查询两个表中符合连接条件的记录")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("SELECT 字段名称,... FROM tbl_name1 [INNER]   JOIN tbl_name2 ON 连接条件;\n\nSELECT e.id,e.username,e.age,d.depName \nFROM emp AS e\nINNER JOIN dep AS d\nON e.depId=d.id;\n\nSELECT p.id,p.productName,p.price,c.cateName,a.username,a.email\nFROM products AS p\nJOIN admin AS a\nON p.adminId=a.id\nJOIN cate AS c\nON p.cateId=c.id\nWHERE p.price<1000\nORDER BY p.price DESC\nLIMIT 0,2;\n")])])]),s("h3",{attrs:{id:"外连接形式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#外连接形式"}},[a._v("#")]),a._v(" 外连接形式")]),a._v(" "),s("h4",{attrs:{id:"左外连接"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#左外连接"}},[a._v("#")]),a._v(" 左外连接")]),a._v(" "),s("p",[a._v("先显示左表全部记录，再去右表中查询符合条件的记录，不符合的以NULL代替")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("SELECT 字段名称,... FROM tbl_name1\nLEFT [OUTER] JOIN tbl_name2\nON 条件;\n\nSELECT e.id,e.username,e.age,d.depName \nFROM emp AS e\nLEFT OUTER JOIN dep AS d\nON e.depId=d.id;\n")])])]),s("h4",{attrs:{id:"右外连接"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#右外连接"}},[a._v("#")]),a._v(" 右外连接")]),a._v(" "),s("p",[a._v("先显示右表全部记录，再去左表中查询符合条件的记录，不符合的以NULL代替")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("SELECT 字段名称,... FROM tbl_name1\nRIGHT [OUTER] JOIN tbl_name2\nON 条件;\n\nSELECT e.id,e.username,e.age,d.depName \nFROM emp AS e\nRIGHT OUTER JOIN dep AS d\nON e.depId=d.id;\n")])])]),s("h2",{attrs:{id:"外键约束"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#外键约束"}},[a._v("#")]),a._v(" 外键约束")]),a._v(" "),s("p",[a._v("只有InnoDB存储引擎支持外键")]),a._v(" "),s("h3",{attrs:{id:"创建外键"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建外键"}},[a._v("#")]),a._v(" 创建外键")]),a._v(" "),s("h4",{attrs:{id:"建表时指定外键"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#建表时指定外键"}},[a._v("#")]),a._v(" 建表时指定外键")]),a._v(" "),s("p",[a._v("字表的外键字段和主表的主键字段类型要相似；如果是数值型要求一致，并且无符号也要一致；如果是字符型，要求类型一致，长度可以不同；")]),a._v(" "),s("p",[a._v("如果外键字段没有创建索引，MySQL会自动帮我们添加索引")]),a._v(" "),s("p",[a._v("子表的外键必须是父表的主键")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("[CONSTRAINT 外键名称] FOREIGN KEY(字段名称) REFERENCES 主表(字段名称);\n\nCREATE TABLE news(\n    id INT UNSIGNED AUTO_INCREMENT KEY,\n    title VARCHAR(100) NOT NULL UNIQUE,\n    content VARCHAR(1000) NOT NULL,\n    cateId TINYINT UNSIGNED NOT NULL,\n    FOREIGN KEY(cateId) REFERENCES news_cate(id)\n)ENGINE=INNODB;\n\n-- 添加外键名称\nCREATE TABLE news(\n    id INT UNSIGNED AUTO_INCREMENT KEY,\n    title VARCHAR(100) NOT NULL UNIQUE,\n    content VARCHAR(1000) NOT NULL,\n    cateId TINYINT UNSIGNED NOT NULL,\n    CONSTRAINT cateId_fk_newsCate FOREIGN KEY(cateId) REFERENCES news_cate(id)\n)ENGINE=INNODB;\n")])])]),s("h4",{attrs:{id:"动态添加外键"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#动态添加外键"}},[a._v("#")]),a._v(" 动态添加外键")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("ALTER TABLE tbl_name\nADD [CONSTRAINT 外键名称] FOREIGN KEY(外键字段) REFERENCES 主表(主键字段)\n\nALTER TABLE news\nADD FOREIGN KEY(cateId) REFERENCES news_cate(id);\n\nALTER TABLE news\nADD CONSTRAINT cateId_fk_newsCate FOREIGN KEY(cateId) REFERENCES news_cate(id);\n")])])]),s("blockquote",[s("p",[a._v("动态添加外键之前表中的记录一定合法的记录，没有脏值，否则外键添加不成功。")])]),a._v(" "),s("h4",{attrs:{id:"动态删除外键"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#动态删除外键"}},[a._v("#")]),a._v(" 动态删除外键")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("ALTER TABLE tbl_name\nDROP FOREIGN KEY fk_name;\n\nALTER TABLE news\nDROP FOREIGN KEY cateId_fk_newsCate;\n")])])]),s("h4",{attrs:{id:"外键约束的参照操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#外键约束的参照操作"}},[a._v("#")]),a._v(" 外键约束的参照操作")]),a._v(" "),s("ul",[s("li",[a._v("CASCADE: 级联，从父表删除或更新，字表也跟着删除或更新")]),a._v(" "),s("li",[a._v("SET NULL: 从父表删除或更新记录，并设置子表的外键列为NULL")]),a._v(" "),s("li",[a._v("NO ACTION|RESTRICT: 拒绝对父表做更新或者删除操作")])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("-- 指定级联操作 DELETE CASCADE UPDATE CASCADE\n\nALTER TABLE news\nADD FOREIGN KEY(cateId) REFERENCES news_cate(id)\nON DELETE CASCADE \nON UPDATE CASCADE;\n")])])]),s("h2",{attrs:{id:"特殊形式的查询"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#特殊形式的查询"}},[a._v("#")]),a._v(" 特殊形式的查询")]),a._v(" "),s("h3",{attrs:{id:"子查询"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#子查询"}},[a._v("#")]),a._v(" 子查询")]),a._v(" "),s("p",[a._v("将一个查询语句嵌套在另一个查询语句中\n内层语句查询的结果可以作为外层语句查询的条件")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("SELECT 字段名称 FROM tbl_name\nWHERE col_name=(SELECT col_name FROM tbl_name);\n")])])]),s("h4",{attrs:{id:"由in引发的子查询"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#由in引发的子查询"}},[a._v("#")]),a._v(" 由IN引发的子查询")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("SELECT * FROM emp\nWHERE depId IN (SELECT id FROM dep);\n\nSELECT * FROM emp\nWHERE depId NOT IN (SELECT id FROM dep);\n")])])]),s("h4",{attrs:{id:"由比较运算符引出的子查询"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#由比较运算符引出的子查询"}},[a._v("#")]),a._v(" 由比较运算符引出的子查询")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("SELECT id,username,score FROM stu\nWHERE score>=(SELECT score FROM level WHERE id=1);\n")])])]),s("h4",{attrs:{id:"由exists引发的子查询"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#由exists引发的子查询"}},[a._v("#")]),a._v(" 由EXISTS引发的子查询")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("-- 子查询有值（返回真）则前面语句执行\nSELECT * FROM emp\nWHERE EXISTS (SELECT depName from dep\nWHERE id=10);\n")])])]),s("h4",{attrs:{id:"any-some-all关键字子查询"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#any-some-all关键字子查询"}},[a._v("#")]),a._v(" ANY SOME ALL关键字子查询")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("-- >= 中 ANY 表示最小值\nSELECT * FROM stu\nWHERE score>=ANY(SELECT score FROM level);\n\n-- >= 中 SOME 表示最小值\nSELECT * FROM stu\nWHERE score>=SOME(SELECT score FROM level);\n\n-- >= 中 ALL 表示最大值\nSELECT * FROM stu\nWHERE score>=ALL(SELECT score FROM level);\n")])])]),s("h4",{attrs:{id:"insert-select-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#insert-select-2"}},[a._v("#")]),a._v(" INSERT ... SELECT")]),a._v(" "),s("p",[a._v("插入另一张数据表的值")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("INSERT user1(username) \nSELECT username FROM user;\n\nINSERT user2 SET username=(SELECT username FROM stu WHERE id=9);\n\n-- 去掉字段重复值\nSELECT DISTINCT(username) FROM user2;\n")])])]),s("h4",{attrs:{id:"create-select"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#create-select"}},[a._v("#")]),a._v(" CREATE ... SELECT")]),a._v(" "),s("p",[a._v("创建表并写入数据")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("CREATE TABLE user1(\n    id INT UNSIGNED AUTO_INCREMENT KEY,\n    username VARCHAR(20)\n) SELECT id,username FROM emp;\n")])])]),s("h4",{attrs:{id:"create-like"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#create-like"}},[a._v("#")]),a._v(" CREATE ... LIKE")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("CREATE TABLE tbl_name LIKE tbl_name1;\n")])])]),s("h3",{attrs:{id:"联合查询"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#联合查询"}},[a._v("#")]),a._v(" 联合查询")]),a._v(" "),s("h4",{attrs:{id:"union"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#union"}},[a._v("#")]),a._v(" UNION")]),a._v(" "),s("p",[a._v("合并时去除重复记录")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("SELECT 字段名称,... FROM tbl_name1\nUNION\nSELECT 字段名称,... FROM tbl_name2;\n\n-- 将user1和user2数据合并到一起\nSELECT * from user1\nUNION\nSELECT * FROM user2;\n")])])]),s("h4",{attrs:{id:"union-all"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#union-all"}},[a._v("#")]),a._v(" UNION ALL")]),a._v(" "),s("p",[a._v("合并时不去除重复记录")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("SELECT 字段名称,... FROM tbl_name1\nUNION ALL\nSELECT 字段名称,... FROM tbl_name2;\n")])])]),s("h3",{attrs:{id:"自身连接查询"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#自身连接查询"}},[a._v("#")]),a._v(" 自身连接查询")]),a._v(" "),s("p",[a._v("无限极分类的实现形式")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("-- 查询所有的分类信息，并且得到其父分类\nSELECT s.id,s.cateName AS sCateName,p.cateName AS pCateName\nFROM cate AS s\nLEFT JOIN cate AS p\nON s.pId=p.id;\n\n-- 查询所有的分类及其子分类\nSELECT p.id,p.cateName AS pCateName,s.cateName AS sCateName\nFROM cate AS s\nRIGHT JOIN cate AS p\nON s.pId=p.id;\n\n-- 查询所有的分类并且得到子分类的数目\nSELECT p.id,p.cateName AS pCateName,COUNT(s.cateName) AS count\nFROM cate AS s\nRIGHT JOIN cate AS p\nON s.pId=p.id\nGROUP BY p.cateName\nORDER BY id ASC;\n")])])])])}),[],!1,null,null,null);e.default=r.exports}}]);