(window.webpackJsonp=window.webpackJsonp||[]).push([[169],{514:function(t,a,e){"use strict";e.r(a);var s=e(42),r=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"z-index"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#z-index"}},[t._v("#")]),t._v(" z-index")]),t._v(" "),e("h2",{attrs:{id:"auto和0"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#auto和0"}},[t._v("#")]),t._v(" auto和0")]),t._v(" "),e("p",[t._v("默认z-index取值为auto，在数值上等于0，但是auto和0不同点在于：")]),t._v(" "),e("ol",[e("li",[t._v("取值为auto时，不创建本地堆叠上下文，内部元素的z-index仍在父级上下文下和其他元素比较。")]),t._v(" "),e("li",[t._v("取值为0时，创建本地堆叠上下文，内部元素的z-index只能在容器内进行比较，无法和外部上下文元素比较。")])]),t._v(" "),e("h2",{attrs:{id:"元素顺序"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#元素顺序"}},[t._v("#")]),t._v(" 元素顺序")]),t._v(" "),e("p",[t._v("当z-index数值相同时，DOM中后面的元素默认覆盖在前面元素的上面。")]),t._v(" "),e("h2",{attrs:{id:"取值"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#取值"}},[t._v("#")]),t._v(" 取值")]),t._v(" "),e("p",[t._v("z-index数值默认为0，可以取正数，负数来调整优先级。")])])}),[],!1,null,null,null);a.default=r.exports}}]);