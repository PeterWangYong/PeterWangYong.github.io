(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{385:function(t,n,a){"use strict";a.r(n);var s=a(42),e=Object(s.a)({},(function(){var t=this,n=t.$createElement,a=t._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"安装部署"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装部署"}},[t._v("#")]),t._v(" 安装部署")]),t._v(" "),a("h2",{attrs:{id:"本地安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#本地安装"}},[t._v("#")]),t._v(" 本地安装")]),t._v(" "),a("h3",{attrs:{id:"配置文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置文件"}},[t._v("#")]),t._v(" 配置文件")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# mongod.conf")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# for documentation of all options, see:")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   http://docs.mongodb.org/manual/reference/configuration-options/")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# where to write logging data.")]),t._v("\nsystemLog:\n  destination: "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v("\n  logAppend: "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n  path: /data/mongodb/db/mongod.log\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Where and how to store data.")]),t._v("\nstorage:\n  dbPath: /data/mongodb/db \n  journal:\n    enabled: "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  engine:")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  wiredTiger:")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# how the process runs")]),t._v("\nprocessManagement:\n  fork: "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# fork and run in background")]),t._v("\n  pidFilePath: /var/run/mongodb/mongod.pid  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# location of pidfile")]),t._v("\n  timeZoneInfo: /usr/share/zoneinfo\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# network interfaces")]),t._v("\nnet:\n  port: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("27017")]),t._v("\n  bindIp: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),t._v(".0.0  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Enter 0.0.0.0,:: to bind to all IPv4 and IPv6 addresses or, alternatively, use the net.bindIpAll setting.")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 开启认证")]),t._v("\nsecurity:\n  authorization: enabled\n")])])]),a("h3",{attrs:{id:"启动服务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#启动服务"}},[t._v("#")]),t._v(" 启动服务")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("mongod -f /etc/mongod.conf\n")])])])])}),[],!1,null,null,null);n.default=e.exports}}]);