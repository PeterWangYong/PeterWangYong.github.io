(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{392:function(a,n,_){"use strict";_.r(n);var t=_(42),v=Object(t.a)({},(function(){var a=this,n=a.$createElement,_=a._self._c||n;return _("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[_("h2",{attrs:{id:"myisam存储引擎"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#myisam存储引擎"}},[a._v("#")]),a._v(" MyISAM存储引擎")]),a._v(" "),_("p",[a._v("MySQL 5.5以前默认MyISAM")]),a._v(" "),_("div",{staticClass:"language- extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[a._v("-- 测试MyISAM存储引擎\nCREATE TABLE test_myisam(\n    a INT UNSIGNED,\n    b VARCHAR(20),\n    c CHAR(32)\n)ENGINE=MyISAM;\n")])])]),_("p",[a._v("默认MyISAM的表会在磁盘中产生3个文件：")]),a._v(" "),_("ul",[_("li",[a._v(".frm 表结构文件")]),a._v(" "),_("li",[a._v(".MYD 数据文件")]),a._v(" "),_("li",[a._v(".MYI 索引文件")])]),a._v(" "),_("p",[a._v("可以在建表时指定数据文件和索引文件的存储位置，只有MyISAM表支持")]),a._v(" "),_("div",{staticClass:"language- extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[a._v("DATA DIRECTORY [=] 数据保存的绝对路径\nINDEX DIRECTORY [=] 索引文件保存的绝对路径\n")])])]),_("p",[a._v("MyISAM单表最大支持的数据量2的64次方条记录")]),a._v(" "),_("p",[a._v("每个表最多可以建立64个索引")]),a._v(" "),_("p",[a._v("如果是复合索引，每个复合索引最多包含16个列，索引值最大长度是1000B")]),a._v(" "),_("p",[a._v("MyISAM引擎的额存储格式")]),a._v(" "),_("ul",[_("li",[_("p",[a._v("定长(FIXED 静态): 字段中不包含VARCHAR/TEXT/BLOB等")]),a._v(" "),_("div",{staticClass:"language- extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[a._v("CREATE TABLE myisam1(\n    a CHAR(30),\n    id INT\n)ENGINE=MyISAM;\n\nSHOW TABLE STATUS LIKE 'myisam_1'\\G\n\nCREATE TABLE myisam3(\n    a VARCHAR(30),\n    id INT\n)ENGINE=MyISAM ROW_FORMAT=FIXED;\n")])])])]),a._v(" "),_("li",[_("p",[a._v("动态(DYNAMIC): 字段中包含了VARCHAR/TEXT/BLOB等")])]),a._v(" "),_("li",[_("p",[a._v("压缩(COMPRESSED)")])])]),a._v(" "),_("h2",{attrs:{id:"innodb存储引擎"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#innodb存储引擎"}},[a._v("#")]),a._v(" InnoDB存储引擎")]),a._v(" "),_("p",[a._v("MySQL 5.5以后默认引擎")]),a._v(" "),_("p",[a._v("设计遵循ACID模型，支持事务，具有从服务崩溃中恢复的能力，能够最大限度保护用户的数据")]),a._v(" "),_("ul",[_("li",[a._v("A: 原子性(Atomiocity)")]),a._v(" "),_("li",[a._v("C: 一致性(Consistency)")]),a._v(" "),_("li",[a._v("I: 隔离性Isolation)")]),a._v(" "),_("li",[a._v("D: 持久性(Durability)")])]),a._v(" "),_("p",[a._v("支持行级锁，提升多用户并发时的读写性能")]),a._v(" "),_("p",[a._v("支持外键，保证数据的一致性和完整性")]),a._v(" "),_("p",[a._v("InnoDB拥有自己独立的缓存池，常用的数据和索引都在缓存中")]),a._v(" "),_("p",[a._v("对于INSERT、UPDATE、DELETE操作，InnoDB会使用一种change buffering的机制来自动优化，还可以提供一致性的读，并且还能够缓存变更的数据，减少磁盘IO，提高性能")]),a._v(" "),_("div",{staticClass:"language- extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[a._v("CREATE TABLE tset_innodb(\n    id INT UNSIGNED AUTO_INCREMENT KEY,\n    username VARCHAR(20) NOT NULL\n);\n\nSHOW CREATE TABLE test_innodb;\n")])])]),_("p",[a._v("创建InnoDB表之后会产生两个文件：")]),a._v(" "),_("ul",[_("li",[a._v(".frm 表结构文件")]),a._v(" "),_("li",[a._v(".ibd 数据和索引存储在表空间中")])]),a._v(" "),_("p",[a._v("所有的表都需要创建主键，最好是配合上AUTO_INCREMENT，也可以放到经常查询的列作为主键")])])}),[],!1,null,null,null);n.default=v.exports}}]);