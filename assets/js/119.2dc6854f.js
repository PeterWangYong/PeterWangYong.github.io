(window.webpackJsonp=window.webpackJsonp||[]).push([[119],{466:function(t,a,v){"use strict";v.r(a);var _=v(42),e=Object(_.a)({},(function(){var t=this,a=t.$createElement,v=t._self._c||a;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"xpath"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#xpath"}},[t._v("#")]),t._v(" xpath")]),t._v(" "),v("h2",{attrs:{id:"lxml库"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#lxml库"}},[t._v("#")]),t._v(" lxml库")]),t._v(" "),v("p",[t._v("xml是Python的一个解析库，支持HTML和XML的解析，支持XPath解析方式，而且解析效率非常高。")]),t._v(" "),v("div",{staticClass:"language-python extra-class"},[v("pre",{pre:!0,attrs:{class:"language-python"}},[v("code",[t._v("pip3 install lxml\n"),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" lxml "),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" etree\n")])])]),v("h2",{attrs:{id:"xpath-2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#xpath-2"}},[t._v("#")]),t._v(" xpath")]),t._v(" "),v("p",[t._v("XPath（XML Path Language，XML路径语言）是一门在XML文档中查找信息的语言，最初是用于搜索XML文档，但是它同样适用于HTML文档的搜索。")]),t._v(" "),v("p",[t._v("XPath的选择功能十分强大，它提供了非常简明的路径选择表达式。另外，它还提供了超过100个内建函数，用于字符串、数值、时间的匹配以及节点、序列的处理等，几乎所有我们想要定位的节点都可以用XPath来选择。")]),t._v(" "),v("h3",{attrs:{id:"基本语法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#基本语法"}},[t._v("#")]),t._v(" 基本语法")]),t._v(" "),v("p",[v("strong",[t._v("在XPath中，有7种类型的节点：元素、属性、文本、命名空间、处理指令、注释以及文档（根）节点。")])]),t._v(" "),v("p",[t._v("XML文档是被作为节点树来进行处理的。树的根被称为文档节点或者根节点。")]),t._v(" "),v("h4",{attrs:{id:"常用规则"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#常用规则"}},[t._v("#")]),t._v(" 常用规则")]),t._v(" "),v("ul",[v("li",[v("code",[t._v("nodename")]),t._v(" 选取此节点的所有子节点")]),t._v(" "),v("li",[v("code",[t._v("/")]),t._v(" 从根节点选取")]),t._v(" "),v("li",[v("code",[t._v("//")]),t._v(" 从文档中选择匹配当前节点的节点")]),t._v(" "),v("li",[v("code",[t._v(".")]),t._v("选取当前节点")]),t._v(" "),v("li",[v("code",[t._v("..")]),t._v(" 选取当前节点的父节点")]),t._v(" "),v("li",[v("code",[t._v("@")]),t._v(" 选取属性")]),t._v(" "),v("li",[v("code",[t._v("*")]),t._v(" 通配符，选择所有元素节点与元素名")]),t._v(" "),v("li",[v("code",[t._v("@*")]),t._v(" 选取所有属性")]),t._v(" "),v("li",[v("code",[t._v("[@attrib]")]),t._v(" 选取具有指定属性的所有元素")]),t._v(" "),v("li",[v("code",[t._v("[@attrib='value']")]),t._v(" 选取指定属性具有匹配值的所有元素")]),t._v(" "),v("li",[v("code",[t._v("[tag]")]),t._v(" 选取所有具有指定元素的直接子节点")]),t._v(" "),v("li",[v("code",[t._v("[tag='text']")]),t._v(" 选取所有具有指定元素并且文本内容是text的节点")])])])}),[],!1,null,null,null);a.default=e.exports}}]);